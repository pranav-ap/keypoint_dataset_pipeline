components:
    detector: dedode
    matcher: roma

task:
    name: basalt  # samples basalt
    
    # use if you want to run the pipeline to run on pics 
    # given in samples field at end of document here
    consider_samples: False # True False  
    
    # basalt related
    
    # use number > 0 if you want to run pipeline on few frames from a cam 
    limit_count: 0  

    dataset: monado_slam  # euroc monado_slam
    dataset_kind: MG 
    
    # all normal blur  
    frame_filtering: all

    blur_threshold: 50
    displacement_threshold: 20  # 20 cm 
    angle_threshold: 20  # 20 degrees
    
    extract_from_all_tracks: True  # True False
    only_missing: False

    output_folder_name: output_${task.frame_filtering}

    track: MOO09_short_1_updown
    tracks: # [] 

        # - MOO01_hand_puncher_1         
        # - MOO02_hand_puncher_2 
        # - MOO03_hand_shooter_easy 
        # - MOO04_hand_shooter_hard
        # - MOO05_inspect_easy
        # - MOO06_inspect_hard
        # - MOO07_mapping_easy
        # - MOO08_mapping_hard
        # - MOO09_short_1_updown
        # - MOO10_short_2_panorama
        # - MOO11_short_3_backandforth
        # - MOO12_freemovement_long_session
        # - MOO13_sudden_movements
        # - MOO14_flickering_light

        # - MGO01_low_light
        # - MGO02_hand_puncher
        # - MGO03_hand_shooter_easy
        # - MGO04_hand_shooter_hard
        # - MGO05_inspect_easy
        # - MGO06_inspect_hard
        # - MGO07_mapping_easy
        # - MGO08_mapping_hard
        # - MGO09_short_1_updown
        # - MGO10_short_2_panorama
        # - MGO11_short_3_backandforth
        - MGO12_freemovement_long_session

    cam: cam0
    cams:
        - cam0
        - cam1
        - cam2
        - cam3

paths:
    roots:
        ws: /home/stud/ath/ath_ws
        # ws: D:/thesis_code
        mav: ${paths.roots.ws}/datasets/${task.dataset}/${task.track}/mav0
        project: ${paths.roots.ws}/keypoint_dataset_pipeline
        output: ${paths.roots.project}/output/${task.output_folder_name}

    samples:
        images: ${paths.roots.project}/data/samples/images
        output: ${paths.roots.output}/samples
    basalt:
        images_csv: ${paths.roots.mav}/${task.cam}/data.csv
        imu_csv: ${paths.roots.mav}/imu0/data.csv

        gt_csv: ${paths.roots.mav}/gt/data.csv
        calib_json: ${paths.roots.ws}/datasets/${task.dataset}/calib/${task.dataset_kind}_calibration.json

        images: ${paths.roots.mav}/${task.cam}/data

        output: ${paths.roots.output}/${task.name}/${task.dataset}/${task.track}
        output_cam: ${paths.basalt.output}/${task.cam}
        aligned_csv: ${paths.basalt.output_cam}/aligned.csv
        keyframes_csv: ${paths.basalt.output_cam}/keyframes.csv
        train_data: ${paths.roots.output}/train

image:
    # [width, height]
    original_image_shape: [640, 480]  # [640, 480]
    crop_image_shape: [ 630, 476 ] # [504, 504] [630, 476]
    patch_size: 82 # 128 82 64

dedode:
    batch_size: 2
    image_keypoints_count: 400

    filter:
        # weighted sampling
        images_sample_count: 200

roma:
    filter:
        # keep matches over the absolute confidence threshold
        confidence_threshold: 0.6
        missed_kp_count: 50

samples:
    samples:
        reference: toronto_A.jpg
        target: toronto_B.jpg
    basalt:
        reference: 8657652230990
        target: 8657685519990

